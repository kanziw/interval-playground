# yaml-language-server: $schema=https://taskfile.dev/schema.json
# https://taskfile.dev
version: "3"

tasks:
  run:
    desc: Starts the app in development mode.
    run: once
    deps:
      - up
      - prepare:app
    cmds:
      - defer: { task: down }
      - yarn dev

  default:
    cmds:
      - task: install:prereqs
      - task: install:tools
      - task: prepare:interval-server
      - task: prepare:app

  install:prereqs:
    internal: true
    desc: Installs prerequisites
    run: once
    cmds:
      - brew bundle
    sources:
      - Brewfile
    preconditions:
      - sh: command -v brew
        msg: "Please install Homebrew: https://brew.sh/"

  install:tools:
    internal: true
    desc: Installs tools
    run: once
    deps:
      - install:prereqs
    cmds:
      - asdf plugin add nodejs
      - asdf plugin add postgres
      - PKG_CONFIG_PATH="/opt/homebrew/opt/icu4c/lib/pkgconfig" asdf install
      - asdf current
    sources:
      - .tool-versions

  prepare:interval-server:
    internal: true
    desc: Prepares the interval server.
    run: once
    deps:
      - install:tools
      - up:db
    cmds:
      - psql postgresql://postgres:postgres@localhost:5432/postgres -lqt | cut -d \| -f 1 | grep -qw 'interval' && echo "Database 'interval' exists" || task initialize:db;
  
  initialize:db:
    desc: Initializes the database.
    run: once
    deps:
      - up:db
    cmds:
      - npm i -g yarn
      - npm i -g @interval/server@1.0.3
      - interval-server db-init
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/interval

  up:
    desc: Starts the interval server.
    run: once
    cmds:
      - docker compose --profile db --profile interval-server up -d

  up:db:
    desc: Starts the database.
    run: once
    cmds:
      - docker compose --profile db up -d

  down:
    desc: Stops the interval server.
    cmds:
      - docker compose --profile db --profile interval-server down

  down:db:
    desc: Stops the database.
    cmds:
      - docker compose --profile db down

  logs:
    desc: Shows the interval server logs.
    run: once
    cmds:
      - docker logs -f $(docker ps --filter "ancestor=alexarena/interval-server:1.0.3" -q)

  reset:
    desc: Resets the interval server.
    run: once
    cmds:
      - docker compose --profile db --profile interval-server down --volumes --rmi all --remove-orphans

  prepare:app:
    internal: true
    desc: Prepares the app.
    run: once
    cmds:
      - yarn install
    sources:
      - yarn.lock
